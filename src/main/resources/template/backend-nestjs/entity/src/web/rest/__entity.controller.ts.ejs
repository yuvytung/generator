import {
  ClassSerializerInterceptor,
  Controller,
  UseGuards,
  UseInterceptors,
} from '@nestjs/common';
import {
  ApiBearerAuth,
  ApiTags
} from '@nestjs/swagger';
import { <%-_entity.name.pascal()%><%-dtoSuffix%> } from '../../service/dto/<%-_entity.name.kebab()%>.dto';
import { <%-_entity.name.pascal()%>Service } from '../../service/<%-_entity.name.kebab()%>.service';
import {
  AuthGuard,
  RolesGuard
} from '../../security';
import {LoggingInterceptor} from '../../client/interceptors/logging.interceptor';
import {AbstractBaseController} from "./abstract.base.controller";


@Controller('api/<%-_entity.name.kebab()%>s')
@UseGuards(AuthGuard, RolesGuard)
@UseInterceptors(LoggingInterceptor, ClassSerializerInterceptor)
@ApiBearerAuth()
@ApiTags('<%-_entity.name.kebab()%>s')
export class <%-_entity.name.pascal()%>Controller extends AbstractBaseController<<%-_entity.name.pascal()%><%-dtoSuffix%>> {
  constructor(
    protected readonly service: <%-_entity.name.pascal()%>Service,
  ) {
    super(service);
  }
}
